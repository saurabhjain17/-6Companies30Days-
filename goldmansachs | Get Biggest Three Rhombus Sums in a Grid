link: https://leetcode.com/problems/get-biggest-three-rhombus-sums-in-a-grid/

class Solution:
    def getBiggestThree(self, grid: List[List[int]]) -> List[int]:
        m=len(grid)
        n=len(grid[0])
        seti=set()
        for i in range(m):
            for j in range(n):
                sz=0
                while i+sz<m and i-sz>=0 and j+2*sz<n:
                    x=i
                    y=j
                    r_sum=0
                    r_sum+=grid[x][y]
                    x+=1
                    y+=1
                    while x<i+sz:
                        r_sum+=grid[x][y]
                        x+=1
                        y+=1
                    if sz>0 :
                        r_sum+=grid[x][y]
                        x-=1
                        y+=1
                        while y<j+2*sz:
                            r_sum+=grid[x][y]
                            x-=1
                            y+=1
                        r_sum+=grid[x][y]
                        x-=1
                        y-=1
                        while x>i-sz:
                            r_sum+=grid[x][y]
                            x-=1
                            y-=1
                        r_sum+=grid[x][y]
                        x+=1
                        y-=1
                        while x<i:
                            r_sum+=grid[x][y]
                            x+=1
                            y-=1 
                    seti.add(r_sum)
                    sz+=1
        lis=sorted(list(seti),reverse=True)[:3]
        return lis    






