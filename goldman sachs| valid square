link: https://leetcode.com/problems/valid-square/


class Solution:
    def validSquare(self, p1: List[int], p2: List[int], p3: List[int], p4: List[int]) -> bool:
        lis=[p1,p2,p3,p4]
        seti=set()
        for i in range(4):
            for j in range(i+1,4):
                d=(lis[i][1]-lis[j][1])**2+(lis[i][0]-lis[j][0])**2
                seti.add(d)
        if len(seti)!=2:
            return False
        m=max(seti)
        n=min(seti)
        if 2*n==m:
            return True
        return False                
